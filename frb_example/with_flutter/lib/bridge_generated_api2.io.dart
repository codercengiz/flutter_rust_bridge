// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.77.1.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import "bridge_definitions.dart";
import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'ffi.io.dart' if (dart.library.html) 'ffi.web.dart';
import 'bridge_generated_api2.dart';
export 'bridge_generated_api2.dart';
import 'dart:ffi' as ffi;

class ApiClass2Platform extends FlutterRustBridgeBase<ApiClass2Wire> {
  ApiClass2Platform(ffi.DynamicLibrary dylib) : super(ApiClass2Wire(dylib));

// Section: api2wire

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_String(String raw) {
    return api2wire_uint_8_list(utf8.encoder.convert(raw));
  }

  @protected
  ffi.Pointer<wire_ApplicationEnv> api2wire_box_application_env(ApplicationEnv raw) {
    final ptr = inner.new_box_application_env_1();
    _api_fill_to_wire_application_env(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_ApplicationEnv> api2wire_box_autoadd_application_env(ApplicationEnv raw) {
    final ptr = inner.new_box_autoadd_application_env_1();
    _api_fill_to_wire_application_env(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_ApplicationSettings> api2wire_box_autoadd_application_settings(ApplicationSettings raw) {
    final ptr = inner.new_box_autoadd_application_settings_1();
    _api_fill_to_wire_application_settings(raw, ptr.ref);
    return ptr;
  }

  @protected
  ffi.Pointer<wire_list_application_env_var> api2wire_list_application_env_var(List<ApplicationEnvVar> raw) {
    final ans = inner.new_list_application_env_var_1(raw.length);
    for (var i = 0; i < raw.length; ++i) {
      _api_fill_to_wire_application_env_var(raw[i], ans.ref.ptr[i]);
    }
    return ans;
  }

  @protected
  ffi.Pointer<wire_ApplicationEnv> api2wire_opt_box_autoadd_application_env(ApplicationEnv? raw) {
    return raw == null ? ffi.nullptr : api2wire_box_autoadd_application_env(raw);
  }

  @protected
  ffi.Pointer<wire_uint_8_list> api2wire_uint_8_list(Uint8List raw) {
    final ans = inner.new_uint_8_list_1(raw.length);
    ans.ref.ptr.asTypedList(raw.length).setAll(0, raw);
    return ans;
  }
// Section: finalizer

// Section: api_fill_to_wire

  void _api_fill_to_wire_application_env(ApplicationEnv apiObj, wire_ApplicationEnv wireObj) {
    wireObj.vars = api2wire_list_application_env_var(apiObj.vars);
  }

  void _api_fill_to_wire_application_env_var(ApplicationEnvVar apiObj, wire_ApplicationEnvVar wireObj) {
    wireObj.field0 = api2wire_String(apiObj.field0);
    wireObj.field1 = api2wire_bool(apiObj.field1);
  }

  void _api_fill_to_wire_application_settings(ApplicationSettings apiObj, wire_ApplicationSettings wireObj) {
    wireObj.name = api2wire_String(apiObj.name);
    wireObj.version = api2wire_String(apiObj.version);
    wireObj.mode = api2wire_application_mode(apiObj.mode);
    wireObj.env = api2wire_box_application_env(apiObj.env);
    wireObj.env_optional = api2wire_opt_box_autoadd_application_env(apiObj.envOptional);
  }

  void _api_fill_to_wire_box_application_env(ApplicationEnv apiObj, ffi.Pointer<wire_ApplicationEnv> wireObj) {
    _api_fill_to_wire_application_env(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_application_env(ApplicationEnv apiObj, ffi.Pointer<wire_ApplicationEnv> wireObj) {
    _api_fill_to_wire_application_env(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_box_autoadd_application_settings(
      ApplicationSettings apiObj, ffi.Pointer<wire_ApplicationSettings> wireObj) {
    _api_fill_to_wire_application_settings(apiObj, wireObj.ref);
  }

  void _api_fill_to_wire_opt_box_autoadd_application_env(
      ApplicationEnv? apiObj, ffi.Pointer<wire_ApplicationEnv> wireObj) {
    if (apiObj != null) _api_fill_to_wire_box_autoadd_application_env(apiObj, wireObj);
  }
}

// ignore_for_file: camel_case_types, non_constant_identifier_names, avoid_positional_boolean_parameters, annotate_overrides, constant_identifier_names

// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint

/// generated by flutter_rust_bridge
class ApiClass2Wire implements FlutterRustBridgeWireBase {
  @internal
  late final dartApi = DartApiDl(init_frb_dart_api_dl);

  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  ApiClass2Wire(ffi.DynamicLibrary dynamicLibrary) : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  ApiClass2Wire.fromLookup(ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName) lookup)
      : _lookup = lookup;

  ffi.Pointer<wire_ApplicationSettings> new_box_autoadd_application_settings_0() {
    return _new_box_autoadd_application_settings_0();
  }

  late final _new_box_autoadd_application_settings_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_ApplicationSettings> Function()>>(
          'new_box_autoadd_application_settings_0');
  late final _new_box_autoadd_application_settings_0 =
      _new_box_autoadd_application_settings_0Ptr.asFunction<ffi.Pointer<wire_ApplicationSettings> Function()>();

  ffi.Pointer<wire_BoxedPoint> new_box_autoadd_boxed_point_0() {
    return _new_box_autoadd_boxed_point_0();
  }

  late final _new_box_autoadd_boxed_point_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_BoxedPoint> Function()>>('new_box_autoadd_boxed_point_0');
  late final _new_box_autoadd_boxed_point_0 =
      _new_box_autoadd_boxed_point_0Ptr.asFunction<ffi.Pointer<wire_BoxedPoint> Function()>();

  ffi.Pointer<wire_Point> new_box_autoadd_point_0() {
    return _new_box_autoadd_point_0();
  }

  late final _new_box_autoadd_point_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_Point> Function()>>('new_box_autoadd_point_0');
  late final _new_box_autoadd_point_0 = _new_box_autoadd_point_0Ptr.asFunction<ffi.Pointer<wire_Point> Function()>();

  ffi.Pointer<wire_Size> new_box_autoadd_size_0() {
    return _new_box_autoadd_size_0();
  }

  late final _new_box_autoadd_size_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_Size> Function()>>('new_box_autoadd_size_0');
  late final _new_box_autoadd_size_0 = _new_box_autoadd_size_0Ptr.asFunction<ffi.Pointer<wire_Size> Function()>();

  ffi.Pointer<wire_SumWith> new_box_autoadd_sum_with_0() {
    return _new_box_autoadd_sum_with_0();
  }

  late final _new_box_autoadd_sum_with_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_SumWith> Function()>>('new_box_autoadd_sum_with_0');
  late final _new_box_autoadd_sum_with_0 =
      _new_box_autoadd_sum_with_0Ptr.asFunction<ffi.Pointer<wire_SumWith> Function()>();

  ffi.Pointer<wire_TreeNode> new_box_autoadd_tree_node_0() {
    return _new_box_autoadd_tree_node_0();
  }

  late final _new_box_autoadd_tree_node_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_TreeNode> Function()>>('new_box_autoadd_tree_node_0');
  late final _new_box_autoadd_tree_node_0 =
      _new_box_autoadd_tree_node_0Ptr.asFunction<ffi.Pointer<wire_TreeNode> Function()>();

  ffi.Pointer<wire_UserId> new_box_autoadd_user_id_0() {
    return _new_box_autoadd_user_id_0();
  }

  late final _new_box_autoadd_user_id_0Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_UserId> Function()>>('new_box_autoadd_user_id_0');
  late final _new_box_autoadd_user_id_0 =
      _new_box_autoadd_user_id_0Ptr.asFunction<ffi.Pointer<wire_UserId> Function()>();

  void free_WireSyncReturn(
    WireSyncReturn ptr,
  ) {
    return _free_WireSyncReturn(
      ptr,
    );
  }

  late final _free_WireSyncReturnPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(WireSyncReturn)>>('free_WireSyncReturn');
  late final _free_WireSyncReturn = _free_WireSyncReturnPtr.asFunction<void Function(WireSyncReturn)>();

  void store_dart_post_cobject(
    DartPostCObjectFnType ptr,
  ) {
    return _store_dart_post_cobject(
      ptr,
    );
  }

  late final _store_dart_post_cobjectPtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(DartPostCObjectFnType)>>('store_dart_post_cobject');
  late final _store_dart_post_cobject = _store_dart_post_cobjectPtr.asFunction<void Function(DartPostCObjectFnType)>();

  Object get_dart_object(
    int ptr,
  ) {
    return _get_dart_object(
      ptr,
    );
  }

  late final _get_dart_objectPtr = _lookup<ffi.NativeFunction<ffi.Handle Function(ffi.UintPtr)>>('get_dart_object');
  late final _get_dart_object = _get_dart_objectPtr.asFunction<Object Function(int)>();

  void drop_dart_object(
    int ptr,
  ) {
    return _drop_dart_object(
      ptr,
    );
  }

  late final _drop_dart_objectPtr = _lookup<ffi.NativeFunction<ffi.Void Function(ffi.UintPtr)>>('drop_dart_object');
  late final _drop_dart_object = _drop_dart_objectPtr.asFunction<void Function(int)>();

  int new_dart_opaque(
    Object handle,
  ) {
    return _new_dart_opaque(
      handle,
    );
  }

  late final _new_dart_opaquePtr = _lookup<ffi.NativeFunction<ffi.UintPtr Function(ffi.Handle)>>('new_dart_opaque');
  late final _new_dart_opaque = _new_dart_opaquePtr.asFunction<int Function(Object)>();

  int init_frb_dart_api_dl(
    ffi.Pointer<ffi.Void> obj,
  ) {
    return _init_frb_dart_api_dl(
      obj,
    );
  }

  late final _init_frb_dart_api_dlPtr =
      _lookup<ffi.NativeFunction<ffi.IntPtr Function(ffi.Pointer<ffi.Void>)>>('init_frb_dart_api_dl');
  late final _init_frb_dart_api_dl = _init_frb_dart_api_dlPtr.asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  void wire_get_app_settings_to_api2(
    int port_,
  ) {
    return _wire_get_app_settings_to_api2(
      port_,
    );
  }

  late final _wire_get_app_settings_to_api2Ptr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>('wire_get_app_settings_to_api2');
  late final _wire_get_app_settings_to_api2 = _wire_get_app_settings_to_api2Ptr.asFunction<void Function(int)>();

  void wire_get_fallible_app_settings_to_api2(
    int port_,
  ) {
    return _wire_get_fallible_app_settings_to_api2(
      port_,
    );
  }

  late final _wire_get_fallible_app_settings_to_api2Ptr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64)>>('wire_get_fallible_app_settings_to_api2');
  late final _wire_get_fallible_app_settings_to_api2 =
      _wire_get_fallible_app_settings_to_api2Ptr.asFunction<void Function(int)>();

  void wire_is_app_embedded_in_api2(
    int port_,
    ffi.Pointer<wire_ApplicationSettings> app_settings,
  ) {
    return _wire_is_app_embedded_in_api2(
      port_,
      app_settings,
    );
  }

  late final _wire_is_app_embedded_in_api2Ptr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Int64, ffi.Pointer<wire_ApplicationSettings>)>>(
          'wire_is_app_embedded_in_api2');
  late final _wire_is_app_embedded_in_api2 =
      _wire_is_app_embedded_in_api2Ptr.asFunction<void Function(int, ffi.Pointer<wire_ApplicationSettings>)>();

  ffi.Pointer<wire_ApplicationEnv> new_box_application_env_1() {
    return _new_box_application_env_1();
  }

  late final _new_box_application_env_1Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_ApplicationEnv> Function()>>('new_box_application_env_1');
  late final _new_box_application_env_1 =
      _new_box_application_env_1Ptr.asFunction<ffi.Pointer<wire_ApplicationEnv> Function()>();

  ffi.Pointer<wire_ApplicationEnv> new_box_autoadd_application_env_1() {
    return _new_box_autoadd_application_env_1();
  }

  late final _new_box_autoadd_application_env_1Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_ApplicationEnv> Function()>>('new_box_autoadd_application_env_1');
  late final _new_box_autoadd_application_env_1 =
      _new_box_autoadd_application_env_1Ptr.asFunction<ffi.Pointer<wire_ApplicationEnv> Function()>();

  ffi.Pointer<wire_ApplicationSettings> new_box_autoadd_application_settings_1() {
    return _new_box_autoadd_application_settings_1();
  }

  late final _new_box_autoadd_application_settings_1Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_ApplicationSettings> Function()>>(
          'new_box_autoadd_application_settings_1');
  late final _new_box_autoadd_application_settings_1 =
      _new_box_autoadd_application_settings_1Ptr.asFunction<ffi.Pointer<wire_ApplicationSettings> Function()>();

  ffi.Pointer<wire_list_application_env_var> new_list_application_env_var_1(
    int len,
  ) {
    return _new_list_application_env_var_1(
      len,
    );
  }

  late final _new_list_application_env_var_1Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_list_application_env_var> Function(ffi.Int32)>>(
          'new_list_application_env_var_1');
  late final _new_list_application_env_var_1 =
      _new_list_application_env_var_1Ptr.asFunction<ffi.Pointer<wire_list_application_env_var> Function(int)>();

  ffi.Pointer<wire_uint_8_list> new_uint_8_list_1(
    int len,
  ) {
    return _new_uint_8_list_1(
      len,
    );
  }

  late final _new_uint_8_list_1Ptr =
      _lookup<ffi.NativeFunction<ffi.Pointer<wire_uint_8_list> Function(ffi.Int32)>>('new_uint_8_list_1');
  late final _new_uint_8_list_1 = _new_uint_8_list_1Ptr.asFunction<ffi.Pointer<wire_uint_8_list> Function(int)>();
}

final class _Dart_Handle extends ffi.Opaque {}

final class wire_uint_8_list extends ffi.Struct {
  external ffi.Pointer<ffi.Uint8> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_ApplicationEnvVar extends ffi.Struct {
  external ffi.Pointer<wire_uint_8_list> field0;

  @ffi.Bool()
  external bool field1;
}

final class wire_list_application_env_var extends ffi.Struct {
  external ffi.Pointer<wire_ApplicationEnvVar> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_ApplicationEnv extends ffi.Struct {
  external ffi.Pointer<wire_list_application_env_var> vars;
}

final class wire_ApplicationSettings extends ffi.Struct {
  external ffi.Pointer<wire_uint_8_list> name;

  external ffi.Pointer<wire_uint_8_list> version;

  @ffi.Int32()
  external int mode;

  external ffi.Pointer<wire_ApplicationEnv> env;

  external ffi.Pointer<wire_ApplicationEnv> env_optional;
}

final class wire_Point extends ffi.Struct {
  @ffi.Double()
  external double x;

  @ffi.Double()
  external double y;
}

final class wire_BoxedPoint extends ffi.Struct {
  external ffi.Pointer<wire_Point> point;
}

final class wire_Size extends ffi.Struct {
  @ffi.Int32()
  external int width;

  @ffi.Int32()
  external int height;
}

final class wire_SumWith extends ffi.Struct {
  @ffi.Uint32()
  external int x;
}

final class wire_list_tree_node extends ffi.Struct {
  external ffi.Pointer<wire_TreeNode> ptr;

  @ffi.Int32()
  external int len;
}

final class wire_TreeNode extends ffi.Struct {
  external ffi.Pointer<wire_uint_8_list> name;

  external ffi.Pointer<wire_list_tree_node> children;
}

final class wire_UserId extends ffi.Struct {
  @ffi.Uint32()
  external int value;
}

typedef DartPostCObjectFnType
    = ffi.Pointer<ffi.NativeFunction<ffi.Bool Function(DartPort port_id, ffi.Pointer<ffi.Void> message)>>;
typedef DartPort = ffi.Int64;
